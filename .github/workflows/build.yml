name: Build

on:
  push:

jobs:
  Git:
    name: Git
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Commit Lint
        uses: webiny/action-conventional-commits@v1.0.5
      - name: Secrets Scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Shell Lint
        uses: luizm/action-sh-checker@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Outstanding Todos
        run: |
          echo Checking for outstanding todos...
          TODO_COUNT=$(grep -r '[\/\/#] [Tt][Oo][Dd][Oo]' . | wc -l)
          if [[ $TODO_COUNT -gt 0 ]] ; then
            echo "$TODO_COUNT" todos found...
            grep -r '[\/\/#] [Tt][Oo][Dd][Oo]' .
            exit 1
          fi
          echo No todos found...


  OpenAPI-Validator:
    name: Validate OpenAPI Specification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install IBM OpenAPI Validator
        run: npm install --location=global ibm-openapi-validator
      - name: Validate OpenAPI definition
        run: lint-openapi --verbose --errors_only --report_statistics --ruleset openapi-specification/.spectral.js openapi-specification/openapi-specification.yml


  Rust:
    name: Rust
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
      - run: echo cache cargo creates
      - run: echo verify cargo crates
      - name: fmt ?? Just want this to check fmt is correct
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: ??
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: ??
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: test ???
        uses: actions-rs/cargo@v1
        with:
          command: test
      - run: echo check test coverage
      - run: echo check running latest deps
      - run: echo audit deps


  Docker:
    name: Docker
    runs-on: ubuntu-latest
    needs:
      - OpenAPI-Validator
      - Rust

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Docker Lint
        uses: hadolint/hadolint-action@v2.0.0
      - name: Build Docker image
        run: DOCKER_BUILDKIT=1 docker build --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -t j-r-oliver/dwp-assessment-rust:${{ github.ref_name }} .
      - name: Dive Image Analysis
        uses: yuichielectric/dive-action@0.0.4
        with:
          image: j-r-oliver/dwp-assessment-rust:${{ github.ref_name }}
          config-file: ${{ github.workspace }}/.dive-ci.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Trivy Vulnerability Scanner
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: j-r-oliver/dwp-assessment-rust:${{ github.ref_name }}
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          format: sarif
          output: trivy-results.sarif
      - name: Upload Trivy Scan Results
        uses: github/codeql-action/upload-sarif@v2
        if: steps.trivy.outcome == 'success' || steps.trivy.outcome == 'failure'
        with:
          sarif_file: trivy-results.sarif
      - name: Container Structure Tests
        uses: plexsystems/container-structure-test-action@v0.2.0
        with:
          image: j-r-oliver/dwp-assessment-rust:${{ github.ref_name }}
          config: container-tests.yaml
      - name: API Tests
        run: docker-compose up --renew-anon-volumes --exit-code-from api-tests
        env:
          GITHUB_IMAGE: j-r-oliver/dwp-assessment-rust:${{ github.ref_name }}
